openapi: 3.0.4
info:
  title: Todo C# 
  version: 1.0.2
tags:
  - name: TodoController
paths:
  /v1/todo:
    get:
      tags:
        - TodoController
      summary: Get paginated Tasks
      operationId: getTasks
      parameters:
        - name: status
          in: query
          description: Опциональный параметр
          required: false
          explode: true
          schema:
            type: boolean
        - name: page
          in: query
          description: Страница
          required: true
          explode: true
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          description: Количество задач на странице
          required: true
          explode: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse<PaginatedTasks>' 
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse' 
    post:
      tags:
        - TodoController
      summary: Создание новой задачи
      description: Создание новой задачи
      requestBody:
        description: Модель новой задачи
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTaskRequest'
        required: true
      responses:
        '201':
          description: Created task
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse<Task>'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - TodoController
      summary: Изменение статуса всех задач
      description: Изменение статуса всех задач на статус из тела запроса
      operationId: patchStatusByRequestBody
      parameters:
        - name: status
          in: query
          description: Additional Metadata
          required: true
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              type: string
              format: binary 
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse' 
    delete:
      tags:
        - TodoController
      summary: Удаление готовых задач
      description: Удаление всех готовых задач
      operationId: deleteAllReadyTasks
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse' 
                
  /v1/todo/{id}:
    delete:
      tags:
        - TodoController
      summary: Удаление задачи 
      description: Удаление задачи по айди
      operationId: deleteTaskById
      parameters:
        - name: id
          in: path
          explode: true
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse' 
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          
  /v1/todo/status/{id}:
    patch:
      tags:
        - TodoController
      summary: Изменение статуса задачи
      description: Изменение статуса задачи по айди
      operationId: patchStatusById
      parameters:
        - name: id
          in: path
          explode: true
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeStatusRequest'
        required: true 
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse<Task>' 
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse' 
                
  /v1/todo/text/{id}:
    patch:
      tags:
        - TodoController
      summary: Изменение текста задачи
      description: Изменение текста задачи по айди
      operationId: patchTextById
      parameters:
        - name: id
          in: path
          explode: true
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeTextRequest'
        required: true
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse<Task>' 
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse' 

#MODELS
components:
  schemas:
    Task:
      required:
        - id
        - status
        - text
        - updatedAt
        - createdAt
      type: object
      properties:
        id:
          type: integer
          format: int64
        status:
          type: boolean
        text:
          type: string
        updatedAt:
          type: string
          format: date-time
        createdAt:
          type: string
          format: date-time
    ChangeStatusRequest:
      required:
        - status
      type: object
      properties:
        status:
          type: boolean
    ChangeTextRequest:
      required:
        - text
      properties:
        text:
          type: string
          minLength: 3
          maxLength: 160
    CreateTaskRequest:      
      required:
        - text
      properties:
        text:
          type: string
          minLength: 3
          maxLength: 160
    ApiResponse:
      type: object
      properties:
        message:
          type: string
        data:
          type: string
    PaginatedTasks:
      type: object
      properties:
        content: 
          type: array
          items:
            $ref: '#/components/schemas/Task'
        notReady:
          type: integer
          format: int32
        numberOfElements:
          type: integer
          format: int32
        ready:
          type: integer
          format: int32
    ApiResponse<PaginatedTasks>:
      type: object
      properties:
        message:
          type: string
        data:
          $ref: '#/components/schemas/PaginatedTasks'
    ApiResponse<Task>:
      type: object
      properties:
        message:
          type: string
        data:
          $ref: '#/components/schemas/Task'
    ErrorResponse:
      type: object
      properties:
        message:
          type: string
      required:
        - message
  requestBodies:
    TasksEntity:
      description: Pet object that needs to be added to the store
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Task'
